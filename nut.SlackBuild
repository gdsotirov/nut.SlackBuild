#!/bin/sh
#
# Slackware build script for Network UPS Tools (NUT)
# Copyright (C) 2006-2025 Georgi D. Sotirov <gdsotirov@gmail.com>
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
#
# Visit SlackPack at https://sotirov-bg.net/slackpack/
#

. ../../slack-package.conf

NAME=nut
VERSION=2.8.4
BUILD=${BUILD:-1}

TMP=${TMP:-/tmp}
CWD=${CWD:-`pwd`}
PKG_DIR=${PKG_DIR:-/tmp}

if [ ! -e $TMP ]; then
  mkdir --parents $TMP # location to build the source
fi

SRC=$TMP/${NAME}-${VERSION}
if [ -e $SRC -a -d $SRC ]; then
  echo "Source directory '$SRC' already exists! Plaese, move it or remove it."
  exit 1
fi

PKG=$TMP/package-${NAME}
if [ -e $PKG -a -d $PKG ]; then
  echo "Package creation directory '$PKG' already exists! Please, move it or remove it."
  exit 2
fi
mkdir --parents $PKG

# Extract the source
cd $TMP
tar --extract --verbose --file=$CWD/${NAME}-${VERSION}.tar.gz || exit 3
cd $SRC
fix_source

# Patch the source
if [ -e $CWD/${NAME}-${VERSION}.diff ]; then
patch --backup --strip=1 --suffix=.orig < $CWD/${NAME}-${VERSION}.diff || exit 4
fi

# Configure
./autogen.sh || exit 51
CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS -std=c++14" \
./configure --build="$ARCH-slackware-linux" \
            --host="$ARCH-slackware-linux" \
            --prefix=/usr \
            --libdir=/usr/lib$LIBDIRSUFFIX \
            --sysconfdir=/etc/ups \
            --localstatedir=/var/ups \
            --datarootdir=/usr/share \
            --mandir=/usr/man \
            --enable-shared=yes \
            --enable-static=no \
            --enable-strip \
            --with-all \
            --with-linux-i2c=no \
            --with-ssl \
            --with-user=nut \
            --with-group=nut \
            --with-cgipath=/var/www/${NAME}-cgi-bin \
            --with-htmlpath=/var/www/${NAME} \
            --with-statepath=/var/state/ups || exit 5

# Build & install
make V=1 --jobs || exit 6
make DESTDIR=$PKG install || exit 7

# Manually create state dir
install --mode 700 --directory $PKG/var/state/ups

# Install bash completion
install --mode 755 --directory $PKG/etc/bash_completion.d
install --mode 644 --preserve-timestamps \
        $SRC/scripts/misc/nut.bash_completion \
        $PKG/etc/bash_completion.d/nut.bash_completion

# Prepare the package
bin_perms $PKG
sbin_perms $PKG
( cd $PKG; strip_bin; strip_lib )
gzip_man $PKG
create_docs $PKG ${NAME}-${VERSION}

install --mode 755 --directory $PKG/install
install --mode 644 --preserve-timestamps \
        $CWD/slack-desc     $PKG/install/slack-desc
install --mode 644 --preserve-timestamps \
        $CWD/slack-required $PKG/install/slack-required
install --mode 644 --preserve-timestamps \
        $CWD/slack-suggests $PKG/install/slack-suggests

SBDIR=$PKG/usr/src/slackbuilds/${NAME}-${VERSION}
install --mode 755 --directory $SBDIR
install --mode 644 --preserve-timestamps \
        $CWD/slack-desc         $SBDIR/slack-desc
install --mode 644 --preserve-timestamps \
        $CWD/slack-required     $SBDIR/slack-required
install --mode 644 --preserve-timestamps \
        $CWD/slack-suggests     $SBDIR/slack-suggests
if [ -e $CWD/${NAME}-${VERSION}.diff ]; then
install --mode 644 --preserve-timestamps \
        $CWD/${NAME}-${VERSION}.diff $SBDIR/${NAME}-${VERSION}.diff
fi
install --mode 644 --preserve-timestamps \
        $CWD/${NAME}.SlackBuild $SBDIR/${NAME}.SlackBuild

# Assemble the package in the package dir
cd $PKG
PKGNAME=${NAME}-${VERSION}-${ARCH}-${BUILD}${MYIN}
makepkg --chown n --linkadd y $PKG_DIR/${PKGNAME}.txz
md5sum $PKG_DIR/${PKGNAME}.txz > $PKG_DIR/${PKGNAME}.txz.md5
install --mode 644 $PKG/install/slack-desc $PKG_DIR/${PKGNAME}.txt

# Clean Up
if [ "$1" == "--cleanup" ]; then
  rm --recursive $SRC
  rm --recursive $PKG
fi

